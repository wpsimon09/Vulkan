        -:    0:Source:/home/wpsimon09/Desktop/LearningVulkan/Vulkan/Includes/Camera/Camera.cpp
        -:    0:Graph:/home/wpsimon09/Desktop/LearningVulkan/Vulkan/cmake-build-debug-coverage/CMakeFiles/LearnVulkan.dir/Includes/Camera/Camera.cpp.gcno
        -:    0:Data:/home/wpsimon09/Desktop/LearningVulkan/Vulkan/cmake-build-debug-coverage/CMakeFiles/LearnVulkan.dir/Includes/Camera/Camera.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by wpsimon09 on 18/08/24.
        -:    3://
        -:    4:
        -:    5:#include "Camera.hpp"
        -:    6:
        -:    7:#include <future>
        -:    8:
function _ZN6CameraC2EP10GLFWwindowN3glm3vecILi3EfLNS2_9qualifierE0EEES5_ffff called 1 returned 100% blocks executed 100%
        1:    9:Camera::Camera(GLFWwindow* window, glm::vec3 center, glm::vec3 up, float radius, float minRadius, float azimuthAngle, float polarAngle) {
        1:    9-block 2
call    0 returned 1
        1:   10:    this->center = center;
        1:   11:    this->worldUp = up;
        -:   12:
        -:   13:    int width, height;
        1:   14:    glfwGetFramebufferSize(window, &width, &height);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   15:    this->projection = glm::perspective(glm::radians(65.0f), (float)width / (float)height, 0.1f, 700.0f);
        1:   15-block 4
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   16:    this->farPlane = 700.0f;;
        1:   17:    this->nearPlane = 0.1f;
        -:   18:
        1:   19:    this->radius = radius;
        1:   20:    this->minRadius = minRadius;
        1:   21:    this->azimuthAngle = azimuthAngle;
        1:   22:    this->polarAngle = polarAngle;
        1:   23:    this->position = getEye();
        1:   23-block 6
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   24:}
        1:   24-block 7
        -:   25:
function _ZN6Camera13rotateAzimutnEf called 111 returned 100% blocks executed 100%
      111:   26:void Camera::rotateAzimutn(float radians) {
      111:   27:    azimuthAngle += radians;
      111:   28:    const auto fullCircle = 2.0f * glm::pi<float>();
      111:   29:    azimuthAngle = fmodf(azimuthAngle, fullCircle);
      111:   30:    if(azimuthAngle<0.0f){
      111:   30-block 2
branch  0 taken 1 (fallthrough)
branch  1 taken 110
        1:   31:        azimuthAngle = azimuthAngle+fullCircle;
        1:   31-block 3
        -:   32:    }
      111:   33:    this->position = getEye();
      111:   33-block 4
call    0 returned 111
      111:   34:}
        -:   35:
function _ZN6Camera11rotatePolarEf called 110 returned 100% blocks executed 83%
      110:   36:void Camera::rotatePolar(float radains) {
      110:   37:    polarAngle += radains;
        -:   38:
      110:   39:    const auto polarCap = glm::pi<float>() /2 - 0.001f;
        -:   40:
      110:   41:    if (this->polarAngle > polarCap) {
      110:   41-block 2
branch  0 taken 18 (fallthrough)
branch  1 taken 92
       18:   42:        this->polarAngle = polarCap;
       18:   42-block 3
        -:   43:    }
        -:   44:
      110:   45:    if (this->polarAngle < -polarCap) {
      110:   45-block 4
branch  0 taken 0 (fallthrough)
branch  1 taken 110
    #####:   46:        this->polarAngle = -polarCap;
    %%%%%:   46-block 5
        -:   47:    }
      110:   48:    this->position = getEye();
      110:   48-block 6
call    0 returned 110
      110:   49:}
        -:   50:
function _ZN6Camera4zoomEf called 24 returned 100% blocks executed 75%
       24:   51:void Camera::zoom(float by) {
       24:   52:    this->radius -= by;
        -:   53:
       24:   54:    if(radius< minRadius){
       24:   54-block 2
branch  0 taken 0 (fallthrough)
branch  1 taken 24
    #####:   55:        radius = minRadius;
    %%%%%:   55-block 3
        -:   56:    }
       24:   57:    this->position = getEye();
       24:   57-block 4
call    0 returned 24
       24:   58:}
        -:   59:
function _ZN6Camera14moveHorizontalEf called 0 returned 0% blocks executed 0%
    #####:   60:void Camera::moveHorizontal(float distance) {
    #####:   61:    const auto pos = getEye();
    %%%%%:   61-block 2
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   62:    const glm::vec3 viewVector = glm::normalize(this->position - this->center);
    %%%%%:   62-block 3
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    $$$$$:   62-block 11
    #####:   63:    const glm::vec3 strafeVector = glm::normalize(glm::cross(viewVector, worldUp));
    %%%%%:   63-block 5
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   63-block 6
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$:   63-block 12
    #####:   64:    center += worldUp + distance;
    %%%%%:   64-block 7
call    0 never executed
call    1 never executed
    #####:   65:    this->position = getEye();
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   66:}
    %%%%%:   66-block 10
        -:   67:
function _ZN6Camera12moveVerticalEf called 0 returned 0% blocks executed 0%
    #####:   68:void Camera::moveVertical(float distance) {
    #####:   69:    center+= worldUp + distance;
    %%%%%:   69-block 2
call    0 never executed
call    1 never executed
    #####:   70:    this->position = getEye();
call    0 never executed
    #####:   71:}
        -:   72:
function _ZN6Camera13processResizeEii called 0 returned 0% blocks executed 0%
    #####:   73:void Camera::processResize(int newWidht, int newHeight) {
        -:   74:    ;
    #####:   75:    this->projection = glm::perspective(glm::radians(65.0f), (float)newWidht / (float)newHeight, 0.1f, 470.0f);
    %%%%%:   75-block 2
call    0 never executed
call    1 never executed
    #####:   76:    this->farPlane = getFarPlane();
call    0 never executed
    #####:   77:    this->nearPlane = 0.1f;
    #####:   78:    this->position = getEye();
call    0 never executed
    #####:   79:}
        -:   80:
function _ZN6Camera6updateEv called 0 returned 0% blocks executed 0%
    #####:   81:void Camera::update() {
        -:   82:
    #####:   83:}
        -:   84:
function _ZN6Camera6getEyeEv called 246 returned 100% blocks executed 100%
      246:   85:glm::vec3 Camera::getEye() {
      246:   86:    const auto sineAzimuth = sin(azimuthAngle);
      246:   87:    const auto cosineAzimuzh = cos(azimuthAngle);
      246:   88:    const auto sinePolar = sin(polarAngle);
      246:   89:    const auto cosinePolar = cos(polarAngle);
        -:   90:
      246:   91:    const auto x = center.x + radius * cosinePolar * cosineAzimuzh;
      246:   92:    const auto y = center.y + radius * sinePolar;
      246:   93:    const auto z = center.z + radius * cosinePolar * sineAzimuth;
        -:   94:
      246:   95:    return {x,y,z};
      246:   95-block 2
call    0 returned 246
      246:   95-block 4
        -:   96:}
        -:   97:
        -:   98:
        -:   99:
