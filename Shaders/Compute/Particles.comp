#version 460

layout(binding = 0) uniform ParameterUBOb{
    float deltaTime;
}ubo;

struct Particle{
    vec2 position;
    vec2 velocity;
    vec4 color;
};

layout(std140, binding = 1) readonly buffer ParticleSSBOIn{
    Particle particlesIn[];
};

layout(std140, binding = 2) readonly buffer ParticleSSBOOut{
    Particle particlesOut[];
};

//dimension of the invocation
layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() {
    uint index = gl_GlobalInvocationID.x;
    Particle particleIn = particlesIn[index];
    particlesOut[index].position = particleIn.position + particleIn.velocity.xy * ubo.deltaTime;
    particlesOut[index].velocity = particleIn.velocity;
}